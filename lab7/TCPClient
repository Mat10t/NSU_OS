#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define SERVER_IP "127.0.0.1"
#define SERVER_PORT 12345
#define BUFSIZE 1024

int main() {
    int socketFD;
    struct sockaddr_in serverAddr;
    char buffer[BUFSIZE];

    socketFD = socket(AF_INET, SOCK_STREAM, 0);
    if (socketFD == -1) {
        perror("Error socket");
        exit(EXIT_FAILURE);
    }

    memset(&serverAddr, 0, sizeof(serverAddr));
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_port = htons(SERVER_PORT);
    serverAddr.sin_addr.s_addr = inet_addr(SERVER_IP);

    if (connect(socketFD, (struct sockaddr *)&serverAddr, sizeof(serverAddr)) == -1) {
        perror("Error connect");
        close(socketFD);
        exit(EXIT_FAILURE);
    }

    printf("Write (q for exit):\n");

    while (1) {
        fgets(buffer, BUFSIZE, stdin);

        size_t len = strlen(buffer);
        if (buffer[len - 1] == '\n') {
            buffer[len - 1] = '\0';
        }
        if (strcmp(buffer, "q") == 0) {
            break;
        }

        if (write(socketFD, buffer, len) == -1) {
            perror("Error write");
            close(socketFD);
            exit(EXIT_FAILURE);
        }

        size_t bytesRead = read(socketFD, buffer, len);
        if (bytesRead == -1) {
            perror("Error read");
            close(socketFD);
            exit(EXIT_FAILURE);
        }
        printf("Server answer: %s\n", buffer);
    }

    close(socketFD);
    return EXIT_SUCCESS;
}
